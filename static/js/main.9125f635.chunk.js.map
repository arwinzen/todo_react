{"version":3,"sources":["components/todoItem/index.js","containers/dashboard/index.js","App.js","reportWebVitals.js","index.js","containers/dashboard/dashboard.module.css","components/todoItem/todoItem.module.css"],"names":["TodoItem","e","console","dir","target","innerHTML","className","classes","todoItem","checkbox","type","this","props","title","time","delBtn","onClick","click","React","Component","Dashboard","state","items","addNew","bind","preventDefault","_inputEl","value","newItem","key","Date","now","toLocaleString","setState","delete","filterItem","filter","list","todo_list","onSubmit","todo","action","name","id","autoComplete","ref","el","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2RAsBeA,E,6JAlBX,SAAQC,GACJC,QAAQC,IAAIF,EAAEG,OAAOC,a,oBAGzB,WACI,OACQ,qBAAIC,UAAWC,IAAQC,SAAvB,UACI,uBAAOF,UAAWC,IAAQE,SAAUC,KAAK,aACzC,+BAAOC,KAAKC,MAAMC,QAClB,+BAAOF,KAAKC,MAAME,OAClB,wBAAQR,UAAWC,IAAQQ,OAAQC,QAASL,KAAKC,MAAMK,MAAvD,2B,GAXGC,IAAMC,WCuEdC,E,kDArEX,WAAYR,GAAO,IAAD,8BACd,cAAMA,IACDS,MAAQ,CACTC,MAAO,IAEX,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBALA,E,0CAQlB,SAAOvB,GAAG,IAAD,OAGL,GADAA,EAAEwB,iBACEd,KAAKe,SAASC,MAAM,CACpB,IAAMC,EAAU,CACZf,MAAOF,KAAKe,SAASC,MACrBE,IAAKC,KAAKC,MACVjB,MAAM,IAAIgB,MAAOE,kBAGrBrB,KAAKsB,SAAS,CAAEX,MAAM,CAAEM,GAAH,mBAAejB,KAAKU,MAAMC,UAC3C,kBAAMpB,QAAQC,IAAI,EAAKkB,MAAMC,UAGjCX,KAAKe,SAASC,MAAQ,M,mBAY9B,SAAME,GAEFlB,KAAKuB,OAAOL,K,oBAGhB,SAAOA,GACH,IAAMM,EAAaxB,KAAKU,MAAMC,MAAMc,QAAQ,SAACC,GAAD,OAAUA,EAAKR,MAAQA,KAEnElB,KAAKsB,SAAS,CAACX,MAAOa,M,oBAG1B,WAAU,IAAD,OACL,OACI,sBAAK7B,UAAWC,IAAQ+B,UAAxB,UACI,uBAAMC,SAAU5B,KAAKY,OAAQjB,UAAWC,IAAQiC,KAAMC,OAAO,IAA7D,UACI,uBAAO/B,KAAK,OAAOgC,KAAK,OAAOC,GAAG,OAAOC,aAAa,MAAMC,IAAK,SAACC,GAAD,OAAQ,EAAKpB,SAAWoB,KACzF,wBAAQpC,KAAK,SAAb,6BAGJ,oBAAIJ,UAAWC,IAAQ8B,KAAvB,SACM1B,KAAKU,MAAMC,MAAMyB,KAAI,SAACV,GAAD,OACnB,cAAC,EAAD,CAEIxB,MAAOwB,EAAKxB,MACZC,KAAMuB,EAAKvB,KACXG,MAAO,kBAAM,EAAKA,MAAMoB,EAAKR,OAHtBQ,EAAKR,iB,GAzDhBX,IAAMC,W,MCQf6B,MARf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,cAAC,EAAD,OCKS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,wBAAwB,UAAY,+B,kBCA7DD,EAAOC,QAAU,CAAC,SAAW,8B","file":"static/js/main.9125f635.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './todoItem.module.css';\r\n\r\nclass TodoItem extends React.Component {\r\n    getItem(e) {\r\n        console.dir(e.target.innerHTML);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n                <li className={classes.todoItem}>\r\n                    <input className={classes.checkbox} type=\"checkbox\" />\r\n                    <span>{this.props.title}</span>\r\n                    <span>{this.props.time}</span>\r\n                    <button className={classes.delBtn} onClick={this.props.click}>\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport classes from './dashboard.module.css';\r\nimport TodoItem from \"../../components/todoItem\";\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n        this.addNew = this.addNew.bind(this);\r\n    }\r\n\r\n    addNew(e){\r\n        // console.dir(this._inputEl);\r\n        e.preventDefault();\r\n        if (this._inputEl.value){\r\n            const newItem = {\r\n                title: this._inputEl.value,\r\n                key: Date.now(), \r\n                time: new Date().toLocaleString()\r\n            };\r\n\r\n            this.setState({ items: [newItem, ...this.state.items ]}, \r\n                () => console.dir(this.state.items)\r\n            );\r\n\r\n            this._inputEl.value = \"\";\r\n\r\n            // method 1\r\n            // get current items and update state\r\n            // this.setState((prevState) => {\r\n            //     return {items: prevState.items.concat(newItem)};\r\n            // }, \r\n            // () => console.dir(this.state.items));\r\n\r\n        }\r\n    }\r\n\r\n    click(key){\r\n        // console.dir(e.target);\r\n        this.delete(key);\r\n    }\r\n\r\n    delete(key){\r\n        const filterItem = this.state.items.filter( (list) => list.key !== key);\r\n\r\n        this.setState({items: filterItem});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.todo_list}>\r\n                <form onSubmit={this.addNew} className={classes.todo} action=\"#\">\r\n                    <input type=\"text\" name=\"task\" id=\"task\" autoComplete=\"off\" ref={(el) => this._inputEl = el} />\r\n                    <button type=\"submit\" >+ Add a Task</button>\r\n                </form>\r\n\r\n                <ul className={classes.list}>\r\n                    { this.state.items.map((list) =>\r\n                        <TodoItem \r\n                            key = {list.key}\r\n                            title={list.title} \r\n                            time={list.time} \r\n                            click={() => this.click(list.key)}\r\n                        />\r\n                    )}\r\n                </ul>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import Dashboard from \"./containers/dashboard\";\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"dashboard_todo__1yjcD\",\"todo_list\":\"dashboard_todo_list__1-WN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"todoItem_todoItem__2Kliz\"};"],"sourceRoot":""}